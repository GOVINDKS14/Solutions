class Solution {
        /*
    public boolean check(int arr[], int n){
        for(int i=0; i<arr.length; i++){
            if(arr[i]==n) return true;
        }
        return false;
    }
    public List<Integer> findDisappearedNumbers(int[] nums) {
        List<Integer> list = new ArrayList<>();
        for(int i=1; i<=nums.length; i++){
            if(check(nums,i)==false) list.add(i);
        }
        return list;
        
        TLE---O(n^2)
        */

    public List<Integer> findDisappearedNumbers(int[] nums) {
        Set<Integer> set = new HashSet<>();
        for(int i=0;i<nums.length;i++){
            if(set.contains(nums[i])==false) set.add(nums[i]);
        }
        List<Integer> list = new ArrayList<>();
        for(int i=1;i<=nums.length;i++){
            if(set.contains(i)==false) list.add(i);
        }
        return list;

        // TC: O(n)
    }
}
